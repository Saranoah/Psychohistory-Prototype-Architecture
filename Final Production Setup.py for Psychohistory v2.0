#!/usr/bin/env python3
"""
Real-Time Computational Psychohistory v2.0
Production setup configuration for advanced civilizational analysis
"""

from setuptools import setup, find_packages
from pathlib import Path
import re

# Constants
PACKAGE_NAME = "psychohistory"
ROOT_DIR = Path(__file__).parent
SRC_DIR = ROOT_DIR / "src"
README = ROOT_DIR / "README.md"
REQUIREMENTS = ROOT_DIR / "Requirements.txt"

def get_version():
    """Extract version from package __init__.py or fallback"""
    try:
        init_file = SRC_DIR / PACKAGE_NAME / "__init__.py"
        if init_file.exists():
            version_content = init_file.read_text()
            version_match = re.search(
                r"^__version__\s*=\s*['\"]([^'\"]*)['\"]", 
                version_content, 
                re.M
            )
            if version_match:
                return version_match.group(1)
    except Exception:
        pass
    return "2.0.0"  # Version 2.0 for your advanced framework

def get_long_description():
    """Read long description from README"""
    try:
        return README.read_text(encoding="utf-8")
    except FileNotFoundError:
        return (
            "Real-Time Computational Psychohistory v2.0: "
            "Advanced AI-Aware Civilizational Monitoring Framework with "
            "temporal analysis, intervention simulation, and pattern recognition"
        )

def get_requirements():
    """Parse requirements file with fallback for your advanced system"""
    try:
        requirements_text = REQUIREMENTS.read_text()
        return [
            line.strip() 
            for line in requirements_text.splitlines() 
            if line.strip() and not line.startswith(("#", "-"))
        ]
    except FileNotFoundError:
        # Advanced requirements for your sophisticated system
        return [
            "numpy>=1.21.0",
            "pandas>=1.3.0",
            "scikit-learn>=1.0.0",
            "matplotlib>=3.5.0",
            "networkx>=2.6.0",
            "torch>=1.9.0",
            "transformers>=4.20.0",
            "streamlit>=1.25.0",
            "plotly>=5.0.0",
            "dash>=2.0.0",
            "scipy>=1.7.0",
            "seaborn>=0.11.0",
        ]

# Package metadata
metadata = {
    "name": PACKAGE_NAME,
    "version": get_version(),
    "author": "Israa Ali",
    "author_email": "israali2019@yahoo.com",
    "description": (
        "Real-Time Computational Psychohistory v2.0: "
        "Advanced AI-Aware Civilizational Monitoring Framework"
    ),
    "long_description": get_long_description(),
    "long_description_content_type": "text/markdown",
    "url": "https://github.com/Saranoah/Psychohistory-Prototype-Architecture",
    "project_urls": {
        "Bug Tracker": "https://github.com/Saranoah/Psychohistory-Prototype-Architecture/issues",
        "Source Code": "https://github.com/Saranoah/Psychohistory-Prototype-Architecture",
        "Documentation": "https://github.com/Saranoah/Psychohistory-Prototype-Architecture/blob/main/docs/index.md",
        "Research": "https://github.com/Saranoah/Psychohistory-Prototype-Architecture/blob/main/docs/RESEARCH.md",
    },
    "classifiers": [
        "Development Status :: 4 - Beta",  # Your v2.0 deserves Beta status
        "Intended Audience :: Science/Research",
        "Intended Audience :: Developers",
        "Intended Audience :: Financial Services",  # Risk analysis
        "Intended Audience :: Government",  # Policy analysis
        "Topic :: Scientific/Engineering :: Artificial Intelligence",
        "Topic :: Sociology",
        "Topic :: Scientific/Engineering :: Information Analysis",
        "Topic :: Office/Business :: Financial :: Investment",  # Risk modeling
        "License :: OSI Approved :: MIT License",
        "Programming Language :: Python :: 3 :: Only",
        "Programming Language :: Python :: 3.8",
        "Programming Language :: Python :: 3.9",
        "Programming Language :: Python :: 3.10",
        "Programming Language :: Python :: 3.11",
        "Operating System :: OS Independent",
        "Framework :: AsyncIO",
        "Framework :: Matplotlib",
        "Typing :: Typed",
    ],
    "package_dir": {"": "src"},
    "packages": find_packages(
        where="src",
        include=["psychohistory*"],
        exclude=["tests*", "docs*", "examples*"]
    ),
    "python_requires": ">=3.8",
    "install_requires": get_requirements(),
    "extras_require": {
        "dev": [
            "pytest>=7.4.0",
            "pytest-asyncio>=0.21.0",
            "pytest-cov>=4.1.0",
            "black>=23.7.0",
            "flake8>=6.0.0",
            "mypy>=1.5.0",
            "jupyter>=1.0.0",
            "ipython>=8.0.0",
        ],
        "ml": [
            "tensorflow>=2.12.0",
            "torch>=2.0.1",
            "transformers>=4.30.2",
            "scikit-learn>=1.3.0",
            "xgboost>=1.7.5",
            "lightgbm>=4.0.0",
            "optuna>=3.0.0",  # Hyperparameter optimization
        ],
        "viz": [
            "dash>=2.11.0",
            "plotly>=5.15.0",
            "seaborn>=0.12.2",
            "bokeh>=3.2.1",
            "streamlit>=1.25.0",
            "altair>=5.0.0",
        ],
        "analysis": [
            "scipy>=1.7.0",
            "statsmodels>=0.14.0",
            "networkx>=2.8.0",
            "igraph>=0.10.0",  # Network analysis
        ],
        "pipeline": [
            "kafka-python>=2.0.2",
            "apache-airflow>=2.6.0",
            "feast>=0.32.0",
            "dask>=2023.5.0",  # Distributed computing
        ],
        "full": [
            # All optional dependencies combined
        ]
    },
    # CLI entry points for your advanced system
    "entry_points": {
        "console_scripts": [
            "psychohistory=psychohistory.psychohistory_analysis_framework2:main",
            "psychohistory-analyze=psychohistory.psychohistory_analysis_framework2:analyze_main",
            "psychohistory-demo=psychohistory.enhanced_psychohistory_interactive_demo:main",
            "psychohistory-simulate=psychohistory.psychohistory_analysis_framework2:simulate_main",
        ],
    },
    "include_package_data": True,
    "package_data": {
        PACKAGE_NAME: [
            "*.py",
            "data/*.json",
            "data/patterns/*.yaml", 
            "data/configs/*.yml",
            "templates/*.html",
            "templates/*.jinja2",
            "py.typed",  # Type information
        ],
    },
    "data_files": [
        ("share/docs/psychohistory", ["README.md", "LICENSE", "CONTRIBUTING.md"]),
    ],
    "zip_safe": False,
    "keywords": [
        "psychohistory",
        "civilization",
        "prediction",
        "artificial intelligence",
        "historical patterns",
        "social dynamics",
        "complex systems",
        "cliodynamics",
        "forecasting",
        "risk assessment",
        "computational sociology",
        "asimov",
        "foundation",
        "seldon",
        "intervention simulation",
        "temporal analysis",
        "pattern recognition",
        "ai influence",
        "civilizational monitoring",
    ],
    "license": "MIT",
    "platforms": ["any"],
    "provides": ["psychohistory"],
}

if __name__ == "__main__":
    setup(**metadata)
